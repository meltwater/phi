---
version: 2

references:
  build: &build
    working_directory: ~/build
    steps:
      - run:
          name: Install Alpine Linux build dependencies
          command: |
            if [[ -f /sbin/apk ]]; then
              apk add --no-cache ca-certificates git openssh-client
            fi
      - checkout
      - run:
          name: Save build versions
          command: |
          command: |
            echo "node: ${NODE_VERSION}" >> .versions
            echo "yarn: ${YARN_VERSION}" >> .versions
            if [[ -f /sbin/apk ]]; then
              echo "alpine: $(cat /etc/alpine-release)" >> .versions
            fi
      - restore_cache:
          key: yarn-cache
      - restore_cache:
          key: module-cache-{{ arch }}-{{ checksum ".versions" }}-{{ checksum "yarn.lock" }}
      - run:
          name: Set yarn cache
          command: yarn config set cache-folder $HOME/.yarn-cache
      - run:
          name: Add npm authentication token
          command: echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc
      - run:
          name: Install dependencies
          command: yarn install --pure-lockfile
      - save_cache:
          key: yarn-cache
          paths: $HOME/.yarn-cache
      - save_cache:
          key: module-cache-{{ arch }}-{{ checksum ".versions" }}-{{ checksum "yarn.lock" }}
          paths: node_modules
      - run:
          name: Build package
          command: |
            if [[ "${PUBLISH}" == 'true' ]]; then
              yarn run package
            else
              yarn run dist
            fi
      - run:
          name: Codecov
          command: |
            if [[ "${COVERAGE}" == 'true' && -n "${CODECOV_TOKEN}" ]]; then
              yarn global add codecov
              codecov
            fi
      - deploy:
          name: Publish package
          command: |
            if [[ "${PUBLISH}" == 'true' ]]; then
              .circleci/publish.sh
            fi

jobs:
  node-8:
    environment:
      COVERAGE: 'true'
    docker:
      - image: node:8
    <<: *build
  node-8-alpine:
    docker:
      - image: node:8-alpine
    <<: *build
  node-7:
    docker:
      - image: node:7
    <<: *build
  node-7-alpine:
    docker:
      - image: node:7
    <<: *build
  node-boron-alpine:
    docker:
      - image: node:7
    <<: *build
  node-boron:
    docker:
      - image: node:boron
    <<: *build
  publish:
    environment:
      PUBLISH: 'true'
    docker:
      - image: node:boron
    <<: *build

workflows:
  version: 2
  default:
    jobs:
      - node-8:
          filters:
            branches:
              ignore: /^gh-pages/
      - node-8-alpine:
          filters:
            branches:
              ignore: /^gh-pages/
      - node-7:
          filters:
            branches:
              ignore: /^gh-pages/
      - node-7-alpine:
          filters:
            branches:
              ignore: /^gh-pages/
      - node-boron:
          filters:
            branches:
              ignore: /^gh-pages/
      - node-boron-alpine:
          filters:
            branches:
              ignore: /^gh-pages/
      - publish:
          filters:
            branches:
              only: /^(v[0-9]|master)/
          requires:
            - node-8
            - node-8-alpine
            - node-7
            - node-7-alpine
            - node-boron
            - node-boron-alpine
